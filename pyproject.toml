[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"


[tool.black]
line-length = 100
target-version = ['py38']


[tool.coverage.report]
exclude_lines = [
    "@overload",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "raise NotImplemented",
    "raise NotImplementedError",
]
fail_under = 100
skip_covered = true

[tool.coverage.run]
source = ["arti"]
branch = true


[tool.isort] # Black compatible config
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 100
multi_line_output = 3
use_parentheses = true


[tool.poetry]
name = "arti"
version = "0.0.1"
description = ""
authors = ["Replica"]
include = ["src/arti/py.typed"]

[tool.poetry.dependencies]
deprecation = "^2.1.0"
pyfarmhash = "^0.2.2"
python = "^3.9"
python-box = "^5.3.0"
types-pyfarmhash = "^0.2.0"

[tool.poetry.dev-dependencies]
black = "21.4b2"
coverage = {version = "^5.5", extras = ["toml"]} # pyproject.toml support
flake8 = "3.9.2"
isort = "5.8.0"
mypy = "0.812"
pre-commit = "2.12.1"
pylint = "^2.8.2"
pytest = "6.2.4"
pytest-benchmark = "3.4.1"
pytest-black = "0.3.12"
pytest-cov = "2.11.1"
pytest-flake8 = "1.0.7"
pytest-isort = "2.0.0"
pytest-mypy = "0.8.1"
pytest-sugar = "0.9.4"
sh = "^1.14.1"
typer = "^0.3.2"


[tool.pylint.format]
max-line-length = "100"

[tool.pylint.master]
extension-pkg-whitelist = [
    "farmhash",
]

[tool.pylint.message_control]
docstring-min-length=10
disable = """
    import-outside-toplevel,
    invalid-name,
    line-too-long,
    no-self-use,
    redefined-builtin,
    too-few-public-methods,
    unsubscriptable-object,
"""


[tool.pytest.ini_options]
addopts = "--black --cov --cov-report=term-missing --flake8 --isort --mypy"
filterwarnings = ["error",]
testpaths = [
    "src/",
    "tests/",
]
