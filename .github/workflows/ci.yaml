name: CI
on:
  pull_request:
  push:
    branches:
    - golden
  workflow_dispatch:

env:
  COLUMNS: 120
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.9.16, 3.10.9, 3.11.1]
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

    - name: pip cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: pip-v0-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          pip-v0-${{ runner.os }}-${{ matrix.python-version }}
          pip-v0-${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade "pip==23.0" "poetry==1.4.0"
        poetry install --all-extras --no-interaction
    - name: code-checkers
      run: |
        # Skip:
        # - no-commit-to-branch since this will run on merged commits too
        # - pytest so that we can run below with specific flags
        SKIP=no-commit-to-branch,pytest poetry run pre-commit run -a
    - name: pytest
      run: |
        poetry run pytest --cov-report="xml:coverage-${{ matrix.os }}-${{ matrix.python-version }}.xml"
    - uses: codecov/codecov-action@v3.1.1
      with:
        env_vars: OS,PYTHON_VERSION
        fail_ci_if_error: true
        files: coverage-${{ matrix.os }}-${{ matrix.python-version }}.xml
        token: ${{ vars.CODECOV_TOKEN }}
