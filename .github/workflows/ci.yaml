name: CI
on: [push]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.9.8, 3.10.0]
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      uses: actions/cache@v2.1.7
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: pip-v0-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          pip-v0-${{ runner.os }}-${{ matrix.python-version }}
          pip-v0-${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade poetry
        poetry install
    - name: code-checkers
      run: |
        shopt -s nullglob # Ignore no glob matches below
        poetry run bandit -ll -r src/
        poetry run blacken-docs {**/,}*.{md,py}
        poetry run pyupgrade --keep-runtime-typing --py39-plus {**/,}*.py
        poetry run trufflehog --exclude_paths .trufflehog_ignore.txt --regex .
    - name: pytest
      run: |
        poetry run pytest --cov-report="xml:coverage-${{ matrix.os }}-${{ matrix.python-version }}.xml"
    - uses: codecov/codecov-action@v2.1.0
      with:
        env_vars: OS,PYTHON_VERSION
        fail_ci_if_error: true
        files: coverage-${{ matrix.os }}-${{ matrix.python-version }}.xml
      if: ${{ always() }}
